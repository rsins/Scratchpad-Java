import edu.princeton.cs.algs4._

def generatePicture(colors: Array[Array[Color]]): Picture = {
  var height = colors(0).length;
  var width = colors.length;
  var outputPic: Picture = new Picture(width, height);
  for (i <- 0 until width) for (j <- 0 until height) outputPic.set(i, j, colors(i)(j));
  return outputPic;
}


:silent
var picture = new Picture("D:\\Ravi\\My_Programs\\Eclipse_Workspace\\Coursera Project_Algorithms Part 2\\resources\\week2\\seamCarving\\HJocean.png")
:silent


var seamCarver = new SeamCarver(picture.width, picture.height, Array.tabulate[Color](picture.width, picture.height) { (i, j) => picture.get(i, j)})
generatePicture(seamCarver.colors).show

 for (i <- 1 to 10) {
    // var seam : Array[Int] = seamCarver.findHorizontalSeam()
    var dt = spark.sparkContext.parallelize((0 until seamCarver.width), 10).map { curI => seamCarver.findVerticalSeamSparkImpl(curI) }
    var resultSeam = dt.reduce((s1: (Double, Array[Int]), s2: (Double, Array[Int])) => if (s1._1 < s2._1) s1 else s2)
    var seam = resultSeam._2;
    seamCarver.removeHorizontalSeam(seam) 
 }

generatePicture(seamCarver.colors).show

 for (i <- 1 to 10) {
    var seam : Array[Int] = seamCarver.findVerticalSeam()
    seamCarver.removeVerticalSeam(seam) 
 }
 
 generatePicture(seamCarver.colors).show
 
